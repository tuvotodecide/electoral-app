// Mock para los strings de i18n
const baseStrings = {
  // Electoral Locations
  electoralLocations: 'Recintos Electorales',
  gettingLocation: 'Obteniendo ubicación...',
  loadingNearbyLocations: 'Cargando recintos cercanos...',
  showingNearbyLocations: 'Mostrando recintos cercanos a ti',
  noLocationsFound: 'No se encontraron recintos',
  noLocationsFoundSubtitle: 'No hay recintos electorales cerca de tu ubicación',
  errorFetchingLocations: 'Error al cargar los recintos electorales',
  locationPermissionTitle: 'Permiso de ubicación',
  locationPermissionMessage:
    'La aplicación necesita acceso a tu ubicación para mostrar recintos cercanos',
  locationPermissionDenied: 'Permiso de ubicación denegado',
  locationError: 'Error al obtener la ubicación',
  locationPermissionError: 'Error al solicitar permisos de ubicación',
  askMeLater: 'Preguntar después',
  cancel: 'Cancelar',
  ok: 'OK',
  accept: 'Aceptar',
  tables: 'mesas',
  code: 'Código',
  error: 'Error',
  success: 'Éxito',
  info: 'Información',
  understanding: 'Entendido',
  loading: 'Cargando...',
  retry: 'Reintentar',
  next: 'Siguiente',
  back: 'Atrás',
  close: 'Cerrar',
  done: 'Hecho',
  save: 'Guardar',
  edit: 'Editar',
  delete: 'Eliminar',
  confirm: 'Confirmar',
  continueButton: 'Continuar',
  table: 'Mesa',
  reviewPhotoPlease: 'Revisa la fotografía del acta electoral',
  reviewActaData: 'Revisa los datos del acta electoral',
  saved: 'Guardado',
  changesSavedSuccessfully: 'Los cambios se guardaron correctamente',
  valid: 'Válidos',
  blank: 'Blancos',
  null: 'Nulos',
  unidad: 'Unidad Cívica',
  pdc: 'PDC',
  morena: 'Morena',
  partyUnit: 'Unidad Cívica',
  partyMasIpsp: 'MAS-IPSP',
  partyPdc: 'PDC',
  partyMorena: 'Morena',
  takePhoto: 'Tomar Foto',
  ensureAssignedTable: 'Verifica que esta sea la mesa asignada',
  aiWillSelectClearestPhoto: 'Nuestra IA elegirá la foto más clara automáticamente',
  tableCode: 'Código de Mesa',
  precinct: 'Recinto',
  preview: 'Previsualización',
  retakePhoto: 'Repetir foto',
  confirmAndSend: 'Confirmar y enviar',
  photoSentTitle: 'Foto enviada',
  photoSentMessage: 'La foto fue enviada con éxito',
  preparingCamera: 'Preparando cámara...',
  cameraErrorTitle: 'Error de cámara',
  cameraErrorMessage: 'No se pudo acceder a la cámara',
  cameraNotAvailable: 'Cámara no disponible',
  infoReadyToLoad: 'Tu información está lista para cargarse',
  i: 'Yo',
  publishAndCertify: 'Publicar y certificar',
  actaCorrectConfirmation:
    'Confirma que el acta de la mesa {tableNumber} en {location} es correcta.',
  locationNotAvailable: 'Ubicación no disponible',
  validationFailed: 'La validación falló',
  duplicateBallotTitle: 'Acta duplicada detectada',
  duplicateBallotMessage: 'Esta acta ya fue registrada en el sistema.',
  pleaseWait: 'Por favor espera...',
  savingToBlockchain: 'Guardando en la blockchain...',
  genericError: 'Ocurrió un error',
  validationError: 'Error de validación',
  invalidActaData: 'Datos de acta inválidos',
  alreadyAttested: 'El acta ya fue atestiguada',
  alreadyCreated: 'El acta ya fue creada',
  goBack: 'Volver',
  validationError400: 'Solicitud inválida.',
  validationError401: 'No autorizado.',
  validationError403: 'Acceso prohibido.',
  validationError404: 'No se encontró la información solicitada.',
  validationError500: 'Error interno del servidor.',
  validationErrorGeneric: 'Hubo un problema validando la información.',
  validationTimeout: 'Tiempo de validación agotado.',
  validationNoResponse: 'No se recibió respuesta del servidor.',
  
  // UnifiedTableScreen strings
  searchTable: 'Buscar Mesa',
  chooseTableText: 'Por favor, elige una mesa',
  chooseTablePlease: 'Por favor, elige una mesa',
  tableCodePlaceholder: 'Buscar mesa por número o código...',
  searchTablePlaceholder: 'Buscar mesa por número o código...',
  listBasedOnLocation: 'Lista basada en ubicación',
  loadingTables: 'Cargando mesas...',
  couldNotLoadTables: 'No se pudieron cargar las mesas',
  errorLoadingTables: 'Error al cargar las mesas',
  goBack: 'Atrás',
  correctData: 'Corregir datos',
  validVotes: 'Votos válidos',
  blankVotes: 'Votos blancos',
  nullVotes: 'Votos nulos',
};

const strings = value => global.String(value);

Object.assign(strings, baseStrings);

export default strings;